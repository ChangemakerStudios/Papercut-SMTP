name: Publish to WinGet

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 7.0.2)'
        required: true
        type: string

env:
  WINGET_PKGS_FORK: ${{ secrets.WINGET_PKGS_FORK || 'ChangemakerStudios/winget-pkgs' }}

jobs:
  publish-winget:
    name: Publish to WinGet Repository
    runs-on: windows-latest
    # Only run on master branch releases (not pre-releases)
    if: |
      (github.event_name == 'release' && !github.event.release.prerelease && github.event.release.target_commitish == 'master') ||
      github.event_name == 'workflow_dispatch'

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Determine version
        id: version
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $version = "${{ inputs.version }}"
          } else {
            $version = "${{ github.event.release.tag_name }}"
          }
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT
          echo "Publishing WinGet manifests for version: $version"

      - name: Download winget manifests from release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $version = "${{ steps.version.outputs.VERSION }}"
          $outputDir = "winget-manifests"
          New-Item -ItemType Directory -Path $outputDir -Force | Out-Null

          Write-Host "Downloading WinGet manifests from release $version..."
          Write-Host "The Cake build (PrepareWinGetRelease task) generates these manifests and uploads them to the release."
          Write-Host ""

          # The manifests are generated by the Cake build and uploaded to the release as assets
          $packageId = "ChangemakerStudios.PapercutSMTP"
          $manifestFiles = @(
            "$packageId.yaml",
            "$packageId.locale.en-US.yaml",
            "$packageId.installer.yaml"
          )

          $allSuccess = $true
          foreach ($file in $manifestFiles) {
            $url = "https://github.com/ChangemakerStudios/Papercut-SMTP/releases/download/$version/$file"
            Write-Host "Downloading: $url"

            try {
              Invoke-WebRequest -Uri $url -OutFile "$outputDir/$file" -ErrorAction Stop
              Write-Host "  ✓ Downloaded $file"
            } catch {
              Write-Error "  ✗ Failed to download $file"
              Write-Error "    Error: $_"
              $allSuccess = $false
            }
          }

          if (-not $allSuccess) {
            Write-Error ""
            Write-Error "Failed to download one or more manifest files from the release."
            Write-Error "This usually means:"
            Write-Error "  1. The release was not created from the master branch (where PrepareWinGetRelease runs)"
            Write-Error "  2. The Cake build task 'PrepareWinGetRelease' failed during the build"
            Write-Error "  3. The DeployReleases task failed to upload the manifests"
            Write-Error ""
            Write-Error "Check the build logs for the release to verify the PrepareWinGetRelease task ran successfully."
            exit 1
          }

          Write-Host ""
          Write-Host "Successfully downloaded all manifests:"
          Get-ChildItem $outputDir | ForEach-Object {
            $content = Get-Content $_.FullName -Raw
            Write-Host "  - $($_.Name) ($($_.Length) bytes)"
          }

      - name: Validate manifests with winget
        run: |
          Write-Host "Validating manifests with winget CLI..."
          winget validate winget-manifests
          Write-Host "✓ Manifests are valid!"

      - name: Upload manifests as artifact
        uses: actions/upload-artifact@v4
        with:
          name: winget-manifests-${{ steps.version.outputs.VERSION }}
          path: winget-manifests/

      - name: Create PR to winget-pkgs repository
        env:
          GH_TOKEN: ${{ secrets.WINGET_PUBLISH_TOKEN }}
        run: |
          if ("${{ secrets.WINGET_PUBLISH_TOKEN }}" -eq "") {
            Write-Warning "WINGET_PUBLISH_TOKEN secret not set. Skipping automatic PR creation."
            Write-Host ""
            Write-Host "=========================================="
            Write-Host "Manual Submission Instructions"
            Write-Host "=========================================="
            Write-Host ""
            Write-Host "To enable automatic PR creation in the future:"
            Write-Host "  1. Fork https://github.com/microsoft/winget-pkgs"
            Write-Host "  2. Create a GitHub Personal Access Token with 'repo' and 'workflow' scopes"
            Write-Host "  3. Add it as WINGET_PUBLISH_TOKEN secret in your repository settings"
            Write-Host "  4. Optionally set WINGET_PKGS_FORK secret to 'YourUsername/winget-pkgs'"
            Write-Host ""
            Write-Host "To submit this release manually:"
            Write-Host "  1. Download the 'winget-manifests-${{ steps.version.outputs.VERSION }}' artifact from this workflow run"
            Write-Host "  2. Extract the three YAML files"
            Write-Host "  3. Fork/clone https://github.com/microsoft/winget-pkgs"
            Write-Host "  4. Copy files to: manifests/c/ChangemakerStudios/PapercutSMTP/${{ steps.version.outputs.VERSION }}/"
            Write-Host "  5. Create a pull request to microsoft/winget-pkgs"
            Write-Host ""
            exit 0
          }

          $version = "${{ steps.version.outputs.VERSION }}"
          $packageId = "ChangemakerStudios.PapercutSMTP"
          $forkRepo = "${{ env.WINGET_PKGS_FORK }}"

          Write-Host "Creating pull request to microsoft/winget-pkgs..."
          Write-Host "Using fork: $forkRepo"
          Write-Host ""

          # Configure git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Clone the fork
          Write-Host "Cloning fork repository..."
          git clone "https://x-access-token:${{ secrets.WINGET_PUBLISH_TOKEN }}@github.com/$forkRepo.git" winget-pkgs-fork
          cd winget-pkgs-fork

          # Add upstream and fetch
          Write-Host "Adding upstream remote and fetching..."
          git remote add upstream https://github.com/microsoft/winget-pkgs.git
          git fetch upstream

          # Create branch from upstream/master
          $branchName = "papercut-$version"
          Write-Host "Creating branch: $branchName"
          git checkout -b $branchName upstream/master

          # Copy manifests to correct location
          $manifestPath = "manifests/c/ChangemakerStudios/PapercutSMTP/$version"
          Write-Host "Creating directory: $manifestPath"
          New-Item -ItemType Directory -Path $manifestPath -Force | Out-Null

          Write-Host "Copying manifest files..."
          Copy-Item ../winget-manifests/* $manifestPath/

          # Commit and push
          Write-Host "Committing changes..."
          git add .
          git commit -m "New version: $packageId version $version"

          Write-Host "Pushing to fork..."
          git push origin $branchName

          # Create PR using GitHub CLI
          Write-Host "Creating pull request..."
          gh pr create `
            --repo microsoft/winget-pkgs `
            --title "New version: $packageId version $version" `
            --body "This pull request updates Papercut SMTP to version $version.`n`n**Release Notes**: https://github.com/ChangemakerStudios/Papercut-SMTP/releases/tag/$version`n`nAutomatically generated by GitHub Actions from the Cake build system." `
            --base master `
            --head "$forkRepo`:$branchName"

          Write-Host ""
          Write-Host "✓ Pull request created successfully!"
          Write-Host "The microsoft/winget-pkgs maintainers will review and merge the PR."
